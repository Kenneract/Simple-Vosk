"""
Author: Kennan (Kenneract)

Purpose: An example of Simple-Vosk with speaker-recognition.

Version: Python 3.8.7 (Windows)

Date: Jan.19.2022
"""

"""
ADDING NEW VOICE SIGNATURES:

Ensure printUnknownSigs=True when creating the Speech object.

Launch the script and begin speaking (longer the better; I've only tested with
~15 seconds).

Upon finishing, your voice likely won't be recognized, and the unknown X-Vector
will be printed to the console. Highlight and copy this entire X-Vector.

Paste this X-Vector into the "voiceSigs" dictionary below, and give it whatever
label you want.

Now re-launch the script and begin speaking again; the script should ideally
identify you as the speaker upon finishing.

You may need to create several signatures per person (ex. "Charlie1","Charlie2",
etc) to cover the full range of their voice. Alternatively, you can increase the
maxSpeakThresh value to accept weaker matches.
"""

import simpleVosk as sv

voiceSigs = {
	"Charlie":[-0.366661, -0.00831, 0.131094, 0.699142, -0.926652, -0.529684, 0.996169, -0.381377, -0.833887, 0.607585, 0.844067, -0.504967, 0.084376, -0.965302, 1.271002, 3.681532, -0.825729, 2.279452, -0.424615, -0.921311, -0.263881, 0.417772, -0.04622, 0.170717, -0.076431, 0.973431, -0.350136, 0.586226, -1.309562, 0.723141, -0.259814, 0.006124, -0.357491, -0.152313, -0.849266, 0.124555, 0.146492, -0.637228, 1.575326, 0.24348, -0.562253, 0.143389, 1.232106, 2.088674, 0.765479, -1.891154, -0.044394, -1.267903, 1.886366, -0.532019, 2.545036, -0.617142, -0.660583, -0.062298, 0.767416, 0.161541, -0.062431, 0.01402, -0.8067, -1.089872, -1.612167, 1.803206, 0.145053, -0.789567, 1.503065, 0.760327, -0.748754, 0.515389, 0.699382, 0.476018, 1.3135, -0.738127, -1.266903, 1.14096, 0.542757, 0.688764, 1.175381, -1.957685, -0.470895, 1.270666, -2.2721, 0.049028, 0.629698, 0.316101, 1.919627, 1.674933, -0.859884, -1.925975, -0.920416, -0.028624, -0.747846, -0.541418, -0.777293, -1.470631, 1.259083, 1.486458, 1.423503, -0.005801, -0.783306, 0.640807, 0.091161, 0.300541, 0.670892, -0.063254, -0.139581, -1.231664, -0.224849, 0.661615, 0.980892, -1.359158, 0.425434, 0.178461, 0.543881, -0.66253, 0.381356, -0.408497, 0.730845, -0.941337, -0.801577, 0.010696, -0.069678, -0.765469, 0.415505, 1.724621, 0.71345, 0.475265, 0.268276, -1.246526],
	"Sam":[-0.459212, 0.661253, -0.228308, -0.250997, 0.009795, 0.135813, -0.107406, -0.932293, -0.95194, 0.553104, 1.181521, -0.274222, -0.41081, 0.305297, 0.835115, 1.721817, -0.287592, 0.592312, 0.778189, -0.354139, -0.698037, 1.331576, 0.965639, 0.177172, -0.76941, 1.350407, -0.082991, 0.129815, -0.575529, 1.582603, 0.259875, 0.805299, 0.889189, 0.565218, -0.165212, -0.623953, -0.67843, 0.505288, 0.31447, 0.273981, 0.370054, -0.259616, 1.52194, 0.998391, 0.19308, -1.896687, -0.321781, -0.163463, 2.401456, -1.787131, 0.030327, -1.170081, -0.201561, -1.377523, -0.330079, -1.0531, -0.135265, -0.449895, 0.510629, -0.618344, 0.648826, 1.504879, 1.244206, -1.051646, -1.177894, -0.512025, -1.428253, 1.587413, 0.008809, 1.319344, -0.68975, 0.823311, 1.615183, 2.732188, 0.211775, 1.503382, 0.732974, 0.748923, 1.777674, 1.137734, -0.643189, -1.793165, 1.075781, -0.588318, 0.892307, 1.689018, -0.143241, 0.894696, -1.082796, 0.700884, -1.18758, -1.716462, -0.268582, -2.994211, 0.894133, -1.270245, 1.239048, -0.229704, -1.678361, 0.025616, 0.281398, -0.422475, 1.061349, 0.625291, 1.494269, -0.857008, 0.840487, -1.324783, -1.020557, -0.379539, -2.23668, -0.518547, -0.194085, -0.553187, 1.347632, -0.36631, 0.713732, -1.176138, -0.754774, -0.165056, -0.793814, 0.666429, 0.133962, -0.834365, -0.878842, 0.13279, -0.60651, -0.237051],
}

def printout(text:str, speaker:str, isFull:bool):
	# Callback; run on each text block.
	if (speaker is None):
		print(f"\nUnknown Speaker: {text}")
	else:
		print(f"\nSpeaker \"{speaker}\": {text}")

speech = sv.Speech(callback=printout, model="model", speakModel="model-spk",
				signatures=voiceSigs, printUnknownSigs=True, verbose=True)
#Run blocking so script doesn't terminate (we're not doing anything else anyways)
speech.start(blocking=True)